//脚本自动输出，请不要手动修改
message playerInfoPush {
	required uint32 cur_pos = 1;
	repeated playerInfo players_info = 2;
}
message playerInfo {
	required uint32 pos = 1;
	required string name = 2;
	required uint32 avatar = 3;
	required uint64 chips = 4;
}
message dealCardsInfo {
	repeated dealCardsList cards_list = 1;
}
message dealCardsList {
	required bool is_banker = 1;
	required uint32 pos = 2;
	required uint32 which_one = 3;
	repeated uint64 cards = 4;
	optional uint32 card_type = 5;
	required uint64 min_sum = 6;
	required uint64 max_sum = 7;
}
message stopCardInfo {
	repeated stopList list = 1;
}
message stopList {
	required uint32 pos = 1;
	required uint32 which_one = 2;
}
message gamePush {
	required uint32 type = 1;
	optional uint32 pos = 2;
	repeated uint64 value = 3;
}
message userOperationReq {
	required uint32 op = 1;
	repeated uint32 value = 2;
}
message userOperationResp {
	required uint32 result = 1;
	required uint32 op = 2;
}
message gameSettlementPush {
	repeated gameResult result = 1;
}
message gameResult {
	required uint32 pos = 1;
	required int64 balance = 2;
	required uint64 chips = 3;
	repeated posResult result = 4;
}
message posResult {
	required uint32 pos = 1;
	required uint32 which_one = 2;
	required int64 balance = 3;
}
message recRoomInfo {
	required uint32 cur_pos = 1;
	required uint32 room_type = 2;
	repeated uint64 room_info = 3;
	repeated playerMsg players = 4;
}
message playerMsg {
	required uint32 pos = 1;
	required string name = 2;
	required uint32 avatar = 3;
	required uint64 chips = 4;
}
message recAnteState {
	required uint32 cur_pos = 1;
	required uint32 time_left = 2;
	repeated anteState ante_state_pos_list = 3;
	repeated uint32 empty_pos_list = 4;
}
message anteState {
	required uint32 origin_pos = 1;
	required uint32 state = 2;
	repeated antedPos ante_pos_list = 3;
}
message antedPos {
	required uint32 pos = 1;
	required uint64 ante = 2;
}
message recDealCardsState {
	required uint32 cur_pos = 1;
	required uint32 time_left = 2;
	repeated cardsList cards_list = 3;
}
message recBuyInsState {
	required uint32 cur_pos = 1;
	required uint32 time_left = 2;
	repeated insList ins_pos_list = 3;
	repeated cardsList cards_list = 4;
}
message insList {
	required uint32 pos = 1;
	repeated insPosList ins_pos = 2;
	required uint32 active = 3;
}
message insPosList {
	required uint32 pos = 1;
	required uint64 ins_ante_chips = 2;
}
message recRoleOpState {
	required uint32 cur_pos = 1;
	required uint32 time_left = 2;
	required uint32 op_origin_pos = 3;
	required uint32 op_pos = 4;
	required uint32 op_which_one = 5;
	repeated cardsList cards_list = 6;
}
message recBankerOpState {
	required uint32 cur_pos = 1;
	repeated cardsList cards_list = 2;
}
message cardsList {
	required uint32 pos = 1;
	required uint32 which_one = 2;
	repeated uint64 cards = 3;
	optional uint32 card_type = 4;
	required uint32 min_sum = 5;
	required uint32 max_sum = 6;
	optional uint64 ante_chips = 7;
}
message gmReq {
	required uint32 room_type = 1;
	required uint32 player_num = 2;
	repeated gmCardsList cards_list = 3;
}
message gmCardsList {
	required uint32 pos = 1;
	repeated uint64 cards = 2;
}
message gmResp {
	required uint32 result = 1;
}